doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/css/style.css')
    script(src='https://cdn.jsdelivr.net/gh/nextapps-de/flexsearch@master/dist/flexsearch.min.js')
  body
    div#wrapper
        div#search
            input#userinput(type='text' placeholder='Search ...')
            div#autocomplete(type='text')
        div.container
            div#suggestions


script.
    const name2url = JSON.parse("{\"Halal\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-hal.jpg\",\"Vegetarian\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-veg.jpg\",\"Antibiotic Free\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-antibfr.jpg\",\"Sustainable\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-sus.jpg\",\"Local\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-loc.jpg\",\"Vegan\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-vegan.jpg\",\"Whole Grain\":\"http://af-foodpro1.campus.ads.umass.edu/foodpro/LegendImages/icon-whlgrn.jpg\"}");
        
    //- var images = [];
    //- function preload() {
    //-     for (var i = 0; i < arguments.length; i++) {
    //-         images[i] = new Image();
    //-         images[i].src = preload.arguments[i];
    //-     }
    //- }

    //-- usage --//
    //- preload(Object.values(name2url));
    var data = !{JSON.stringify(data)}
    if (data) {        
        (function(){
            var index = new FlexSearch({
                encode: "advanced",
                tokenize: "reverse",
                suggest: false,
                cache: true
            });

            var suggestions = document.getElementById("suggestions");
            var userinput = document.getElementById("userinput");
            var autocomplete = document.getElementById("autocomplete");

            userinput.addEventListener("input", show_results, true);
            //suggestions.addEventListener("click", accept_suggestion, true);
            userinput.addEventListener("keyup", accept_autocomplete, true);

            for(var i = 0; i < data.length; i++){
                var text = data[i].name;
                index.add(i, text);

                //- entry = document.createElement("div");
                //- suggestions.appendChild(entry);
                //- entry.textContent = data[i].name;
            }

            function show_results(){
                var value = this.value;
                var results = index.search(value, {
                    limit: 25,
                    suggest: false
                });

                var entry, childs = suggestions.childNodes;
                var i = 0, len = results.length;

                for(; i < len; i++){
                    entry = childs[i];

                    if(!entry){
                        entry = document.createElement("div");
                        entry.classList.add("grid-item");
                        
                        let con = document.createElement("div");
                        con.classList.add("grid-item-container");

                        let ingredients = document.createElement("div");
                        ingredients.classList.add("grid-item-ingredients");

                        let diet = document.createElement("div");
                        diet.classList.add("grid-item-diet");

                        entry.appendChild(con);
                        entry.appendChild(ingredients);
                        entry.appendChild(diet);
                        suggestions.appendChild(entry);
                    }

                    try {
                        if (entry) {
                            //console.log(data[results[i]]);
                            entry.firstChild.textContent = data[results[i]].name;
                            let diet = data[results[i]].props;

                            if (diet) {
                                console.log(diet.length);
                                entry.lastChild.textContent = '';
                                diet.forEach(function (val) {
                                    if (name2url[val]) {
                                        var img = new Image();
                                        img.src = name2url[val];
                                        img.title = val;
                                        img.classList.add("diet-img");
                                        entry.lastChild.append(img);
                                    }
                                })
                            }
                        }
                    } catch (e) {
                        //console.log(e);
                    }
                }

                while(childs.length > len){
                    childs[i].remove();
                    //suggestions.removeChild(childs[i])
                }
                
                // autocomplete stuff
                if (data[results[0]]) {
                    var first_result = data[results[0]].name;
                    var match = first_result && first_result.toLowerCase().indexOf(value.toLowerCase());

                    if(first_result && (match !== -1)){
                        autocomplete.value = value + first_result.substring(match + value.length);
                        autocomplete.current = first_result;
                    }
                    else{
                        autocomplete.value = autocomplete.current = value;
                    }
                }
            }

            function accept_autocomplete(event){
                if((event || window.event).keyCode === 13) {
                    this.value = autocomplete.value = autocomplete.current;
                }
            }

            //- function accept_suggestion(event){
            //-     var target = (event || window.event).target;
            //-     userinput.value = autocomplete.value = target.textContent;

            //-     while (suggestions.children.length > 1) {
            //-         console.log(suggestions.lastChild.innerText === autocomplete.value);
            //-         if (suggestions.lastChild.innerText !== autocomplete.value) {
            //-             suggestions.removeChild(suggestions.lastChild);
            //-         } else if (suggestions.firstChild !== suggestions.lastChild) {
            //-             suggestions.removeChild(suggestions.firstChild);
            //-         }
            //-     }
            //-     return false;
            //- }
        }());
    }